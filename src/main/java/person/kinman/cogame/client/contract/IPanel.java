package person.kinman.cogame.client.contract;

/**
 * @author KinMan谨漫
 * @date 2025/8/13 09:57
 */
import java.awt.*;

/**
 * 面板生命周期接口，定义所有面板（如房间面板、游戏面板）的统一行为规范
 * 用于规范面板的初始化、显示、隐藏、销毁及页面切换等生命周期操作
 */
public interface IPanel {

    /**
     * 初始化面板：创建UI组件、绑定事件监听器、初始化数据
     * 该方法在面板首次创建时调用，且仅调用一次
     * 注意：避免在该方法中执行耗时操作（如网络请求），可放在单独线程或{@link #onShow()}中
     */
    void init();

    /**
     * 显示面板：将面板设置为可见状态，可在此处执行显示前的准备工作
     * 每次面板从隐藏状态切换到显示状态时调用（如从主菜单切换到房间面板）
     * 示例：刷新房间列表、恢复上次显示时的状态
     */
    void showComponent();

    /**
     * 隐藏面板：将面板设置为不可见状态，可在此处执行临时资源释放
     * 每次面板从显示状态切换到隐藏状态时调用（如从房间面板返回主菜单）
     * 示例：暂停面板内的动画、停止轮询请求
     */
    void hideComponent();

    /**
     * 销毁面板：彻底释放面板占用的资源，执行后面板不可再复用
     * 当面板永久退出生命周期时调用（如游戏结束后销毁游戏面板）
     * 示例：断开网络连接、释放图片/音频资源、取消事件监听器
     */
    void destroy();

    /**
     * 获取当前面板的AWT组件（用于添加到容器中显示）
     * 提供给面板管理器（如GameLauncher）用于页面切换时的容器挂载
     * @return 面板对应的AWT组件（通常为JPanel或其子类）
     */
    Component getComponent();

    /**
     * 判断面板是否已初始化
     * 用于在切换或操作面板前验证状态（避免操作未初始化的面板）
     * @return true：已初始化（{@link #init()}已调用）；false：未初始化
     */
    boolean isInitialized();

    /**
     * 面板显示后的回调：在{@link #showComponent()}执行完毕、面板完全可见后调用
     * 可在此处执行显示后的异步操作（如网络请求、动画启动）
     * 示例：游戏面板显示后开始倒计时、房间面板显示后请求房间列表
     */
    default void onShow() {}

    /**
     * 面板隐藏后的回调：在{@link #hideComponent()}执行完毕、面板完全不可见后调用
     * 可在此处执行隐藏后的收尾操作（如保存当前状态到本地）
     * 示例：房间面板隐藏后保存当前输入的服务器IP和端口
     */
    default void onHide() {}
}